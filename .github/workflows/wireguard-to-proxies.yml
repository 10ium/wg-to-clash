name: Generate Configs

on:
  push:
    paths:
      - 'wireguard/**'
      - 'Simple_URL_List.txt' 
      - 'mihomo_template.txt'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name:  checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          echo ">>> Installing Python dependencies..."
          python -m pip install --upgrade pip
          pip install ruamel.yaml
          echo ">>> Dependencies installed."
        # استفاده از bash -e باعث می‌شود در صورت خطا، مرحله متوقف شود
        shell: bash -e {0}

      - name: 1. Generate proxies.yaml from WireGuard
        run: |
          echo ">>> Starting WireGuard to proxies conversion..."
          if [ ! -d "wireguard" ]; then
            echo "--- WireGuard directory not found, skipping step 1."
            mkdir -p generated
            exit 0
          fi
          python scripts/convert_wireguard.py wireguard generated/proxies.yaml
          echo ">>> Finished WireGuard to proxies conversion."
        shell: bash -e {0}

      - name: 2. Generate Mihomo configs and README
        run: |
          echo ">>> Starting Mihomo config generation..."
          if [ ! -f "Simple_URL_List.txt" ] || [ ! -f "mihomo_template.txt" ]; then
            echo "--- Input files (Simple_URL_List.txt or mihomo_template.txt) not found, skipping step 2."
            exit 0
          fi
          python scripts/generate_mihomo.py
          echo ">>> Finished Mihomo config generation."
        shell: bash -e {0}

      - name: 3. Show generated files and Git status
        run: |
          echo ">>> Listing generated files:"
          ls -R generated
          echo ">>> Listing root directory:"
          ls -a .
          echo ">>> Git status before commit:"
          git status
        # این مرحله نباید با خطا متوقف شود اگر فایل‌ها نباشند
        shell: bash {0} 

      - name: 4. Upload Log File
        uses: actions/upload-artifact@v4
        with:
          name: update-log # نام آرتیفکت
          path: update.log # مسیر فایل لاگ
          # فقط در صورتی آپلود کن که مرحله قبلی شکست نخورده باشد (اگرچه اینجا نیازی نیست)
          # و اگر فایل وجود داشته باشد
          if-no-files-found: ignore # اگر فایل لاگ نبود، خطا نده

      - name: 5. Commit updated files
        uses: EndBug/add-and-commit@v9
        with:
          author_name: github-actions
          author_email: actions@github.com
          message: 'chore: update proxies, mihomo configs and README [skip ci]'
          add: '.' 
          push: true
          pull: '--rebase --autostash'
          # اگر کامیتی برای انجام نبود، خطا نده
          allow_empty: true